name: Test and Release
on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Install KinD
        run: |
          set -euo pipefail
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.29.0/kind-linux-amd64
          chmod +x kind
          sudo mv kind /usr/local/bin/kind
      - name: Run test
        run: |
          set -euo pipefail
          ./test.sh
  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - test
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          fetch-depth: 0
      - name: Install Cosign
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 #v3.9.2
        with:
          cosign-release: 'v2.5.3'
      - name: Helm login
        run: |
          echo "${GITHUB_TOKEN}" | helm registry login ghcr.io --username "${DOCKER_USER}" --password-stdin
        env:
          DOCKER_USER: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Cosign login
        run: |
          echo "${GITHUB_TOKEN}" | cosign login ghcr.io --username "${DOCKER_USER}" --password-stdin
        env:
          DOCKER_USER: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Replace version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          set -euo pipefail
          VERSION=$(echo -n '${{ github.ref_name }}' | sed -e s/v//)
          sed -i -e "s/0.0.0-SNAPSHOT/${VERSION}/" dns4acme/Chart.yaml
          sed -i -e "s/latest/${VERSION}/" dns4acme/Chart.yaml
      - name: Package
        run: |
          set -euo pipefail
          helm package dns4acme
      - name: Push
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          set -euo pipefail
          VERSION=$(echo -n '${{ github.ref_name }}' | sed -e 's/v//')
          REPO=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          echo "Executing helm push"
          DIGEST=$(helm push "dns4acme-${VERSION}.tgz" "oci://ghcr.io/${REPO}" 2>&1 | grep Digest | cut -d ' ' -f 2)
          echo "Signing release"
          cosign sign -y -d "ghcr.io/${REPO}/dns4acme@${DIGEST}"
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 #v4.6.2
        with:
          name: artifacts
          path: dns4acme*.tgz
          if-no-files-found: error
